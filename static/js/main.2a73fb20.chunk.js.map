{"version":3,"sources":["models/nav-tabs-type.ts","store/user-reducer.ts","components/user-data/UserData.tsx","components/header/Header.tsx","components/tab-panel/TabPanel.tsx","models/filter-options-models.ts","store/filter-options-reducer.ts","store/combine-reducer.ts","store/index.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["NavTabs","initialState","fullName","avatarURL","notifications","STATE_KEY","selectFullName","state","selectAvatarURL","selectNotifications","UserData","useSelector","Grid","container","alignItems","spacing","item","ButtonGroup","disableElevation","variant","color","aria-label","Button","Badge","badgeContent","Avatar","src","Typography","IconButton","useStyles","makeStyles","header","backgroundColor","Header","classes","AppBar","position","className","Toolbar","justify","alt","Events","tabs","Dashboard","Sites","Campaigns","Analytics","Live_View","Users","Organizations","Settings","TabPanel","React","useState","value","setValue","Paper","Tabs","onChange","_event","newValue","indicatorColor","textColor","map","Tab","label","events","ALL","date","sites","combineReducer","combineReducers","type","payload","USER_STATE_KEY","store","createStore","maxWidth","minHeight","padding","App","Container","direction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a73fb20.chunk.js","sourcesContent":["export enum NavTabs {\n  Dashboard = 'Dashboard',\n  Sites = 'Sites',\n  Campaigns = 'Campaigns',\n  Analytics = 'Analytics',\n  Live_View = 'Live View',\n  Users = 'Users',\n  Organizations = 'Organizations',\n  Settings = 'Settings',\n}\n","interface UserStateI {\n  fullName: string;\n  avatarURL: string;\n  notifications: number;\n}\n\nconst initialState: UserStateI = {\n  fullName: 'Adrian Villa',\n  avatarURL: './avatar.jpg',\n  notifications: 9,\n};\n\nexport const STATE_KEY = 'user';\n\nexport const userReducer = (state = initialState, { type, payload }: Record<string, any>): UserStateI => {\n  switch (type) {\n    default:\n      return state;\n  }\n};\n\ninterface PredictedStateI {\n  [STATE_KEY]: UserStateI;\n}\n\nexport const selectFullName = (state: PredictedStateI) => state[STATE_KEY].fullName;\n\nexport const selectAvatarURL = (state: PredictedStateI) => state[STATE_KEY].avatarURL;\nexport const selectNotifications = (state: PredictedStateI) => state[STATE_KEY].notifications;\n","import Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { selectFullName, selectAvatarURL, selectNotifications } from '../../store/user-reducer';\n\nconst useUserData = () => {\n  const fullName = useSelector(selectFullName);\n  const avatarURL = useSelector(selectAvatarURL);\n  const notifications = useSelector(selectNotifications);\n  return { fullName, avatarURL, notifications };\n};\n\nconst UserData = () => {\n  const { notifications, avatarURL, fullName } = useUserData();\n\n  return (\n    <Grid container alignItems=\"center\" spacing={1}>\n      <Grid item>\n        <ButtonGroup disableElevation variant=\"text\" color=\"inherit\" aria-label=\"outlined button group actions\">\n          <Button>\n            <SearchIcon />\n          </Button>\n          <Button>\n            <Badge badgeContent={notifications} color=\"error\">\n              <NotificationsIcon />\n            </Badge>\n          </Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item>\n        <Avatar src={avatarURL} />\n      </Grid>\n      <Grid item>\n        <Typography>{fullName}</Typography>\n      </Grid>\n      <Grid item>\n        <IconButton color=\"inherit\">\n          <ExpandMoreIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default UserData;\n","import AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport React from 'react';\nimport { UserData } from '../user-data';\n\nconst useStyles = makeStyles({\n  header: {\n    backgroundColor: 'black',\n  },\n});\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <AppBar position=\"static\" className={classes.header}>\n      <Toolbar>\n        <Grid container alignItems=\"center\" justify=\"space-between\">\n          <Grid item>\n            <img src=\"logo.png\" alt=\"logo\" />\n          </Grid>\n          <Grid item>\n            <UserData />\n          </Grid>\n        </Grid>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { NavTabs } from '../../models/nav-tabs-type';\n\nconst tabs: NavTabs[] = [\n  NavTabs.Dashboard,\n  NavTabs.Sites,\n  NavTabs.Campaigns,\n  NavTabs.Analytics,\n  NavTabs.Live_View,\n  NavTabs.Users,\n  NavTabs.Organizations,\n  NavTabs.Settings,\n];\n\nconst TabPanel = () => {\n  const [value, setValue] = React.useState(0);\n  const handleChange = (_event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <Paper>\n      <Tabs value={value} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\">\n        {tabs.map((value) => (\n          <Tab key={value} label={value} />\n        ))}\n      </Tabs>\n    </Paper>\n  );\n};\n\nexport default TabPanel;\n","export enum Events {\n  ALL = 'All',\n  PAGE_VIEWS = 'Page views',\n  UNIQUE_USERS = 'Unique users',\n  AVERAGE_TIME_PER_VISIT = 'Average time per visit',\n  BOUNCE_RATE = 'Bounce rate',\n}\n","import { Events } from '../models/filter-options-models';\n\ninterface FilterOptionStateI {\n  sites: string[];\n  events: Events;\n  date: string;\n}\n\nconst initialState: FilterOptionStateI = {\n  events: Events.ALL,\n  date: '123',\n  sites: ['Glyphy', 'DesignStripe', 'DesignValley', 'Neueubel', 'Last Year', 'Drawkit'],\n};\n\nexport const STATE_KEY = 'filterOptions';\n\nexport const filterOptionReducer = (\n  state = initialState,\n  { type, payload }: Record<string, any>\n): FilterOptionStateI => {\n  switch (type) {\n    default:\n      return state;\n  }\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { combineReducers } from 'redux';\n\nimport { filterOptionReducer, STATE_KEY as FILER_OPTIONS_STATE_KEY } from './filter-options-reducer';\nimport { userReducer, STATE_KEY as USER_STATE_KEY } from './user-reducer';\n\nconst combineReducer = combineReducers({\n  [FILER_OPTIONS_STATE_KEY]: filterOptionReducer,\n  [USER_STATE_KEY]: userReducer,\n});\n\nexport default combineReducer;\n","import { createStore } from 'redux';\nimport combineReducer from './combine-reducer';\n\nconst store = createStore(combineReducer);\n\nexport default store;\n","import React from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Header } from './components/header';\nimport { TabPanel } from './components/tab-panel';\nimport store from './store';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: '100%',\n    minHeight: '100vh',\n    padding: 0,\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <Provider store={store}>\n      <Header />\n      <Container className={classes.container} maxWidth=\"lg\">\n        <Grid container direction=\"column\">\n          <Grid item>\n            <TabPanel />\n          </Grid>\n        </Grid>\n      </Container>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}